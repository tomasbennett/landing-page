/* The root has accessible variables in case we implement a colour changing scheme (such as dark-mode) in the future */

:root{
    font-size: 62.5%;
}

:root{
    --main-background-colour: #1F2937;
    --heading-large-text-colour: #F9F8FA;
    --heading-small-text-colour: #E5E7EB;
    --sign-in-background-colour: #3882F6;
}

*, *::after, *::before{
    box-sizing: border-box;
    font-family: Roboto;
    margin: 0;
    padding: 0;
}

body{
    font-size: 1.6rem;
}

html, body{
    display: grid;
    grid-template-columns: clamp(25px, 5vw, 60px) 1fr clamp(25px, 5vw, 60px);
    grid-template-rows: auto
                        auto
                        minmax(auto, 1fr)
                        auto;
    grid-template-areas: ". header ."
                         ". thumbnail ."
                         "main main main"
                         ". footer .";
    
    /* height: auto; */
    min-height: 100vh;
    width: 100vw;

    background-color: var(--main-background-colour);
}

header{
    display: flex;
    align-items: center; 

    margin: 10px 0px;

    grid-area: header;
}

.header-logo{
    font-size: 2.4rem;
    white-space: nowrap;

    margin-right: auto;
}

.header-nav-links{
    display: grid;
    grid-template-columns: minmax(60px, auto);
    align-items: center;

    position: relative;
}

.header-logo,
.title-text h1{
    color: var(--heading-large-text-colour);
}

.header-list-links a,
.title-text p{
    color: var(--heading-small-text-colour);
}

.header-list-links{
    display: flex;
    column-gap: 15px;

    list-style: none;
}

.header-list-links a{
    text-decoration: none;
    font-size: 2rem;

    transition: 0.3s color ease;
}

.title-container{
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: minmax(400px, auto);
    column-gap: clamp(55px, 8vw, 80px);
    /* row-gap: 0px; */

    grid-area: thumbnail;
}

.title-text{
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/*
   title-image img should have alt text that is centered in
   terms of position with padding so that it isn't touching
   the sides.
*/

.title-image{
    width: 100%;
    min-height: 40rem;


    background-color: gray;
    color: var(--heading-large-text-colour);
}

.title-image img{
    width: 100%;
    height: 100%;

    object-fit: contain;
}

.title-text h1{
    font-size: 4.8rem;
    font-weight: 900;

/* This line will need to be adjusted when text becomes rem based */
   
    line-height: 5rem;
    margin-bottom: 1rem;
}

.title-text button{
    align-self: flex-start;

    display: flex;
    justify-content: center;
    align-items: center;

    background-color: var(--sign-in-background-colour);
    color: var(--heading-large-text-colour);

    height: 3rem;
    aspect-ratio: 19 / 6;

    border-radius: .5rem;
    border: 0px;
    margin-top: 1rem;
}

main{
    display: grid;
    grid-template-columns: subgrid;
    place-items: center;

    background-color: var(--heading-large-text-colour);
    margin-top: 4rem;

    grid-area: main;
}

main > *{
    grid-column: 2;
}

.main-heading{
    font-size: 3.6rem;
    font-weight: 900;

    margin-top: 1rem;

    /* text-align: center; */
}

/*
   Also the text when everything is on one column will
   originally be to the right of the block until it shrinks
   and needs to go on the bottom of the blocks.
*/

.main-image-text-container{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr) minmax(30rem, 1fr));
    grid-auto-rows: 1fr 
                    auto;

    column-gap: 20px;
    row-gap: 40px;

    width: 100%;
    height: calc(65rem - 15vw);

    margin-top: calc(1rem + 2vw);
}

.main-image-text-element{
    display: grid;
    grid-template-rows: subgrid;
    /* place-items: center; */
    row-gap: .5rem;

    grid-row: span 2;
}

.main-image-text-element .main-image{
    grid-row: 1;

    display: flex;
    align-items: center;
    justify-content: center;
    /* width: 100%;
    height: 100%; */

    container-type: size;
    container-name: main-image-container;
}

.main-image-text-element .main-image div{
    display: grid;
    place-items: center;

    border: .2rem solid var(--sign-in-background-colour);
    border-radius: .5rem;

    aspect-ratio: 1 / 1;
    /* margin: auto 0; */

    overflow: hidden;
}

/* I want the image to be object-fit: cover; with width and height 100% 
   and for the border to be on the .main-image */

.main-image-text-element .main-image img{
    width: 100%;
    height: 100%;

    object-fit: cover;
}

.main-image-text-element p{
    grid-row: -1;

    text-align: center;
}

.main-paragraph-container{
    display: flex;
    flex-direction: column;

    width: 80%;
    max-width: 85rem;
    /* max-height: 200px; */

    margin: 10rem 0px 8rem;
}

.main-paragraph-container q{
    font-size: 3.6rem;
    font-style: italic;

    text-wrap: pretty;
}

.main-paragraph-container p{
    display: flex;
    justify-content: flex-end;

    margin-top: .5rem;
    /* margin-left: auto; */
}

.call-to-action-container{
    display: grid;
    grid-template-columns: 3rem 1.5fr 0.5fr 3rem;
    column-gap: 2rem;
    align-items: center;

    height: 10rem; 

    background-color: var(--sign-in-background-colour);
    color: var(--heading-large-text-colour);

    margin-bottom: 2rem;
    border-radius: .5rem;
}

.call-to-action-text{
    grid-column: 2;
}

.call-to-action-button{
    justify-self: end;

    text-align: center;

    height: 3rem;
    aspect-ratio: 19 / 6;

    background-color: inherit;
    color: inherit;

    border-radius: .5rem;
    border: .2rem solid var(--heading-large-text-colour);

    grid-column: 3;
}

.title-text button,
.call-to-action-button{
    cursor: pointer;
    transition: 0.3s ease;
    transition: 0.1s transform ease;
}

footer{
    justify-self: center;

    color: var(--heading-large-text-colour);
    font-size: 1.2rem;
    margin: .8rem auto;

    grid-area: footer;
}

.title-text button:hover, 
.call-to-action-button:hover{
    background-color: var(--heading-large-text-colour);
    color: var(--sign-in-background-colour);
}

.title-text button:active, 
.call-to-action-button:active{
    transform: scale(0.95);
}

.header-list-links a:hover{
    color: var(--heading-large-text-colour);
}
